# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: dotnet api reference app pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_WEBAPP_NAME: TodoApi-demo  # set this to your application's name
  DOT_NET_APP_NAME: TodoApi
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7.0'                 # set this to the .NET Core version to use

jobs:
  build:

    runs-on: windows-latest

    steps:
    # Checkout the repo
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 
   
    - name: Restore Dependencies & Build for Release
      run: |
        dotnet restore
        dotnet build --configuration Release

    - name: Test
      run: dotnet test --logger trx --results-directory "TestResults" --collect:"XPlat Code Coverage"
      # Test Coverage: https://learn.microsoft.com/en-us/dotnet/core/testing/unit-testing-code-coverage?tabs=linux
      
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.DOT_NET_APP_NAME}}_test_results
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Create the package
      run: dotnet pack --configuration Release

    - name: Create publish artifact
      run: dotnet publish --configuration Release

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.DOT_NET_APP_NAME}}_artifact
        path: ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/${{env.DOT_NET_APP_NAME}}
  
  deploy:
    runs-on: windows-latest
    needs: build
    # environment: # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    #   name: 'prod'
    #   url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ${{env.DOT_NET_APP_NAME}}_artifact

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
